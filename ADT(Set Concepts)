#include<iostream>
using namespace std;

int size = 0;

void Add_Element(int arr[], int& size, int element) {
    if (size < 10) {
        arr[size] = element;
        size++;
    } else {
        cout << "Array is Full\n";
    }
}

void Remove_Element(int arr[], int& size, int element) {
    int i;
    for (i = 0; i < size; i++) {
        if (arr[i] == element) {
            break;
        }
    }
    if (i == size) {
        cout << "Element not found\n";
        return;
    }
    for (int j = i; j < size - 1; j++) {
        arr[j] = arr[j + 1];
    }
    size--;
}

int Search_Element(int arr[], int size, int element) {
    for (int i = 0; i < size; i++) {
        if (arr[i] == element) {
            return 1;
        }
    }
    return -1;
}

void Display(int arr[], int size) {
    if (size == 0) {
        cout << "Array is empty\n";
        return;
    }
    cout << "Array Elements are: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << "\n";
}

int Size(int size) {
    cout << "Size of array is " << size << "\n";
    return size;
}

void intersection(int arr1[], int size1, int arr2[], int size2) {
    bool found;
    cout << "Intersection: ";
    
    for (int i = 0; i < size1; i++) {
        found = false;

        for (int j = 0; j < size2; j++) {
            if (arr1[i] == arr2[j]) {
                found = true;
                break;
            }
        }

        if (found) {
            cout << arr1[i] << " ";

            for (int k = 0; k < size2; k++) {
                if (arr2[k] == arr1[i]) {
                    arr2[k] = -1;  
                    break;
                }
            }
        }
    }

    cout << endl;
}

void Union(int arr1[], int size1, int arr2[], int size2) {
    cout << "Union: ";
    
    for (int i = 0; i < size1; i++) {
        cout << arr1[i] << " ";
    }

    for (int i = 0; i < size2; i++) {
        bool isDuplicate = false;

        for (int j = 0; j < size1; j++) {
            if (arr2[i] == arr1[j]) {
                isDuplicate = true;
                break;
            }
        }

        if (!isDuplicate) {
            cout << arr2[i] << " ";
        }
    }

    cout << endl;
}

void Difference(int arr1[], int size1, int arr2[], int size2) {
    cout << "Difference (arr1 - arr2): ";
    
    for (int i = 0; i < size1; i++) {
        bool found = false;
        
        for (int j = 0; j < size2; j++) {
            if (arr1[i] == arr2[j]) {
                found = true;
                break;
            }
        }

        if (!found) {
            cout << arr1[i] << " ";
        }
    }

    cout << endl;
}

int main() {
    int arr1[10], arr2[10];
    int size1 = 0, size2 = 0;
    int n, element;

   
    cout << "Enter the number of elements for the first array: ";
    cin >> n;
    cout << "Enter elements for the first array:\n";
    for (int i = 0; i < n; i++) {
        cout << "Element " << i + 1 << ": ";
        cin >> element;
        Add_Element(arr1, size1, element);
    }

   
    cout << "Enter the number of elements for the second array: ";
    cin >> n;
    cout << "Enter elements for the second array:\n";
    for (int i = 0; i < n; i++) {
        cout << "Element " << i + 1 << ": ";
        cin >> element;         Add_Element(arr2, size2, element);
    }

    
    cout << "First array: ";
    Display(arr1, size1);
    cout << "Second array: ";
    Display(arr2, size2);

   
    intersection(arr1, size1, arr2, size2);
    Union(arr1, size1, arr2, size2);
    Difference(arr1, size1, arr2, size2);

    return 0;
}
